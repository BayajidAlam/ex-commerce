version: "3.8"

services:
  # MongoDB Service with persistent data
  mongodb:
    image: mongo:7.0
    container_name: ex-commerce-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-ex_commerce}
    # NO EXTERNAL PORTS - only accessible through backend
    volumes:
      # Persistent data storage
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./backups:/backups
    networks:
      - ex-commerce-network
    command: mongod --auth --bind_ip_all

  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: ex-commerce-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      # Allow overriding full URI from CI/CD; fall back to internal Mongo service
      MONGODB_URI: ${MONGODB_URI:-mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword123}@mongodb:27017/${MONGO_DB_NAME:-ex_commerce}?authSource=admin}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      JWT_SECRET: ${JWT_SECRET}
      # Admin + default user ensure variables
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_FORCE_RESET: ${ADMIN_FORCE_RESET:-false}
      DEFAULT_USER_EMAIL: ${DEFAULT_USER_EMAIL:-}
      DEFAULT_USER_PASSWORD: ${DEFAULT_USER_PASSWORD:-}
      DEFAULT_USER_FORCE_RESET: ${DEFAULT_USER_FORCE_RESET:-false}
      # Cloudinary
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    ports:
      - "5000:5000"
    volumes:
      - uploads_data:/app/uploads
    networks:
      - ex-commerce-network
    depends_on:
      - mongodb

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: ex-commerce-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # Use public API base for the browser; CI/CD should set this to your domain
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    ports:
      - "3000:3000"
    networks:
      - ex-commerce-network
    depends_on:
      - backend

# Named volumes for persistent data
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  uploads_data:
    driver: local

# Network for inter-service communication
networks:
  ex-commerce-network:
    driver: bridge
