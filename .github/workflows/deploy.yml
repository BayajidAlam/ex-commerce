name: Deploy to VPS with Docker

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS via Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "Starting deployment..."
            
            # Check if directory exists
            if [ ! -d "/var/www/ex-commerce" ]; then
              echo "Error: Project directory /var/www/ex-commerce not found"
              echo "Please run the setup script first"
              exit 1
            fi
            
            cd /var/www/ex-commerce
            echo "Current directory: $(pwd)"
            
            # Check if git repo exists
            if [ ! -d ".git" ]; then
              echo "Error: Not a git repository"
              exit 1
            fi
            
            # Pull latest changes
            echo "Pulling latest changes..."
            git pull origin main
            
            # Check if docker-compose.yml exists
            if [ ! -f "docker-compose.yml" ]; then
              echo "Error: docker-compose.yml not found"
              exit 1
            fi
            
            # Copy environment file if not exists
            if [ ! -f ".env" ]; then
              echo "Creating .env file from template..."
              cp .env.docker .env
              echo "Please update .env file with your settings"
            fi
            
            # Check Docker installation
            if ! command -v docker &> /dev/null; then
              echo "Error: Docker not installed"
              exit 1
            fi
            
            # Deploy with Docker Compose (try both commands for compatibility)
            echo "Stopping existing containers..."
            docker compose down 2>/dev/null || docker-compose down 2>/dev/null || echo "No containers to stop"
            
            echo "Building containers..."
            docker compose build --no-cache 2>/dev/null || docker-compose build --no-cache || {
              echo "Build failed"
              exit 1
            }
            
            echo "Starting containers..."
            docker compose up -d 2>/dev/null || docker-compose up -d || {
              echo "Failed to start containers"
              exit 1
            }
            
            # Wait and check status
            echo "Waiting for containers to start..."
            sleep 30
            
            echo "Container status:"
            docker compose ps 2>/dev/null || docker-compose ps || echo "Could not get container status"
            
            # Check if containers are running
            if docker compose ps 2>/dev/null | grep -q "Up" || docker-compose ps 2>/dev/null | grep -q "Up"; then
              echo "✅ Deployment completed successfully!"
            else
              echo "❌ Some containers may not be running properly"
              echo "Logs:"
              docker compose logs --tail=50 2>/dev/null || docker-compose logs --tail=50 || echo "Could not get logs"
              exit 1
            fi
